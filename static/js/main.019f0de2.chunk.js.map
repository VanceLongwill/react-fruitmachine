{"version":3,"sources":["actions/fruitMachine.js","reducers/fruitMachine.js","reducers/index.js","config/constants.js","utils/index.js","sagas/fruitMachine.js","sagas/index.js","config/store.js","components/PageLayout/PageLayout.js","components/PageLayout/index.js","components/Heading/Heading.js","components/Heading/index.js","components/WheelFace/WheelFace.js","components/WheelFace/index.js","components/Wheel/Wheel.js","components/Wheel/index.js","components/Lever/control-lever.svg","components/Lever/Lever.js","components/Lever/index.js","components/FruitMachine/FruitMachine.js","components/FruitMachine/index.js","components/SpinResult/SpinResult.js","components/SpinResult/index.js","App.js","index.js"],"names":["WINNING_SPIN","LOSING_SPIN","SPIN_WHEEL_REQUEST","SPIN_WHEEL_SUCCESS","losingSpin","color","matchCount","type","payload","defaultState","isSpinning","isWin","matchColor","wheels","prev","next","results","fruitMachine","state","arguments","length","undefined","action","Object","objectSpread","castAction","map","wheel","i","randoms","key","uuid","count","concat","toConsumableArray","combineReducers","WHEELFACES_PER_ROW","WHEEL_RADIUS","WHEEL_ANGLE","ANIMATION_DURATION","COLORS","name","value","COLORS_BY_INDEX","getRandom","Math","floor","random","handleGenerateSpin","handleSpinResult","watchSpin","regenerator_default","a","wrap","_context","put","stop","_marked","matches","sortedMatches","mostFrequent","_context2","indices","reduce","acc","entries","sort","b","Number","delay","t0","abrupt","Error","_marked2","_context3","takeEvery","_marked3","rootSaga","all","sagas_marked","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","run","PageLayout","styled","div","_templateObject","HeadingContainer","Heading_templateObject","Title","h1","_templateObject2","Subtitle","h2","_templateObject3","Heading","react_default","createElement","Facet","WheelFace_templateObject","p","rotateX","radius","WheelFace","props","AnimatedWheel","Wheel_templateObject","animation","Wheel","isLoading","prevIndex","nextIndex","toPos","keyframes","Wheel_templateObject2","wheelFaces","push","components_WheelFace","_extends","assign","target","source","prototype","hasOwnProperty","call","apply","this","_ref","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","control_lever_SvgComponent","version","id","xmlnsXlink","x","y","viewBox","style","enableBackground","xmlSpace","fill","d","__webpack_require__","leverAnimation","Lever_templateObject","AnimatedLever","Lever_templateObject2","Lever","onClick","FruitMachineContainer","FruitMachine_templateObject","WheelsContainer","FruitMachine_templateObject2","Layout","FruitMachine_templateObject3","FruitMachine","onSpin","components_Wheel","components_Lever","ResultsContainer","SpinResult_templateObject","StyledText","SpinResult_templateObject2","SpinResult","notifications","result","react_transition_group","exit","classNames","timeout","getResultText","component","confettiConfig","angle","spread","startVelocity","elementCount","dragFriction","duration","width","height","colors","actionCreators","handleSpin","connect","components_PageLayout","components_Heading","components_FruitMachine","confetti_default","config","active","components_SpinResult","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.019f0de2.chunk.js","sourcesContent":["// @flow\nexport const WINNING_SPIN = 'WINNING_SPIN'\nexport const LOSING_SPIN = 'LOSING_SPIN'\n\nexport const SPIN_WHEEL_REQUEST = 'SPIN_WHEEL_REQUEST'\nexport const SPIN_WHEEL_SUCCESS = 'SPIN_WHEEL_SUCCESS'\n\nexport function winningSpin(color: string, matchCount: number) {\n  return {\n    type: WINNING_SPIN,\n    payload: { color, matchCount },\n  }\n}\n\nexport function losingSpin(color: string, matchCount: number) {\n  return {\n    type: LOSING_SPIN,\n    payload: { color, matchCount },\n  }\n}\n\nexport function spinWheelRequest() {\n  return {\n    type: SPIN_WHEEL_REQUEST,\n  }\n}\n\nexport function spinWheelSuccess(randoms: Array<number>) {\n  return {\n    type: SPIN_WHEEL_SUCCESS,\n    payload: {\n      randoms,\n    },\n  }\n}\n\nexport type Actions =\n  | $Call<typeof spinWheelRequest>\n  | $Call<typeof spinWheelSuccess, Array<number>>\n  | $Call<typeof winningSpin, string, number>\n  | $Call<typeof losingSpin, string, number>\n","// @flow\nimport {\n  SPIN_WHEEL_REQUEST,\n  SPIN_WHEEL_SUCCESS,\n  WINNING_SPIN,\n  LOSING_SPIN,\n  type Actions,\n} from '../actions'\nimport uuid from 'uuid'\nimport type { Wheel, State } from '../types/fruitMachine'\n\nexport const defaultState: State = {\n  isSpinning: false,\n  isWin: false,\n  matchCount: 0,\n  matchColor: '',\n  wheels: [{ prev: 0, next: -1 }, { prev: 0, next: -1 }, { prev: 0, next: -1 }],\n  results: [],\n}\n\nfunction fruitMachine(state: State = defaultState, action: Actions) {\n  switch (action.type) {\n    case SPIN_WHEEL_REQUEST:\n      return {\n        ...state,\n        isSpinning: true,\n        isWin: false,\n        // uncomment to start wheel spinning before receiving random index results from API\n        // wheels: state.wheels.map<Wheel>((wheel) => {\n        //   return {\n        //     prev: wheel.next === -1 ? 0 : wheel.next,\n        //     next: wheel.next === -1 ? 0 : wheel.next,\n        //   }\n        // })\n      }\n    case SPIN_WHEEL_SUCCESS:\n      let castAction = (action: any) // to get rid of flow error\n      return {\n        ...state,\n        wheels: state.wheels.map<Wheel>((wheel, i) => {\n          return {\n            prev: wheel.next === -1 ? 0 : wheel.next,\n            next: castAction.payload.randoms[i],\n          }\n        }),\n      }\n    case WINNING_SPIN:\n      return {\n        ...state,\n        isSpinning: false,\n        isWin: true,\n        results: [\n          {\n            key: uuid(),\n            color: action.payload.color,\n            count: action.payload.matchCount,\n          },\n          ...state.results,\n        ],\n      }\n    case LOSING_SPIN:\n      return {\n        ...state,\n        isSpinning: false,\n        isWin: false,\n        results: [\n          {\n            key: uuid(),\n            color: action.payload.color,\n            count: action.payload.matchCount,\n          },\n          ...state.results,\n        ],\n      }\n    default:\n      return state\n  }\n}\n\nexport default fruitMachine\n","//@flow\nimport { combineReducers } from 'redux'\nimport fruitMachine from './fruitMachine'\n\nexport default combineReducers({\n  fruitMachine,\n  // more reducers here\n})\n","// @flow\nexport const WHEELFACES_PER_ROW = 12\nexport const WHEEL_RADIUS = 200\nexport const WHEEL_ANGLE = 360 / WHEELFACES_PER_ROW\nexport const ANIMATION_DURATION = 2 // seconds\n\nexport const COLORS = [\n  {\n    name: 'red',\n    value: 'rgb(198, 6, 0)',\n  },\n  {\n    name: 'green',\n    value: 'rgb(105, 150, 15)',\n  },\n  {\n    name: 'blue',\n    value: 'rgb(79, 190, 242)',\n  },\n  {\n    name: 'yellow',\n    value: 'rgb(249, 244, 87)',\n  },\n]\n\nexport const COLORS_BY_INDEX = [\n  COLORS[0],\n  COLORS[1],\n  COLORS[2],\n  COLORS[3],\n\n  COLORS[0],\n  COLORS[1],\n  COLORS[2],\n  COLORS[3],\n\n  COLORS[0],\n  COLORS[1],\n  COLORS[2],\n  COLORS[3],\n\n  COLORS[0],\n  COLORS[1],\n  COLORS[2],\n  COLORS[3],\n]\n","// @flow\nimport { COLORS_BY_INDEX, WHEELFACES_PER_ROW } from '../config/constants'\n\ntype Matches = {\n  red?: number,\n  blue?: number,\n  green?: number,\n  yellow?: number,\n}\n\nexport function getColorMatches(indices: Array<number>): Matches {\n  return indices.reduce((acc, i) => {\n    const color = COLORS_BY_INDEX[i].name\n    if (acc[color]) {\n      acc[color]++\n    } else {\n      acc[color] = 1\n    }\n    return acc\n  }, {})\n}\n\nexport function getRandom() {\n  return Math.floor(Math.random() * WHEELFACES_PER_ROW)\n}\n","// @flow\nimport { put, delay, takeEvery } from 'redux-saga/effects'\n\nimport {\n  SPIN_WHEEL_REQUEST,\n  SPIN_WHEEL_SUCCESS,\n  spinWheelSuccess,\n  winningSpin,\n  losingSpin,\n} from '../actions'\nimport { getColorMatches, getRandom } from '../utils'\nimport { ANIMATION_DURATION } from '../config/constants'\n\nexport function* handleGenerateSpin(): any {\n  /*\n   * Using Math.random to determine where the spin will land is easily hackable\n   * e.g. in browser console `Math.random = () => 0.5` will result in [6,6,6]\n   */\n  yield put(spinWheelSuccess([getRandom(), getRandom(), getRandom()]))\n}\n\nexport function* handleSpinResult(action: { payload: { randoms: Array<number> } }): any {\n  const matches = getColorMatches(action.payload.randoms)\n\n\n  const sortedMatches = Object.entries(matches).sort((a, b) => {\n    // flow type refinement\n    return Number(b[1]) - Number(a[1])\n  })\n\n  const mostFrequent = sortedMatches[0]\n\n  // wait for animation to finish\n  yield delay(1000 * ANIMATION_DURATION)\n\n  switch (mostFrequent[1]) {\n    case 3:\n      yield put(winningSpin(mostFrequent[0], mostFrequent[1]))\n      break\n    case 2:\n    case 1:\n      yield put(losingSpin(mostFrequent[0], mostFrequent[1]))\n      break\n    default:\n      throw new Error()\n  }\n}\n\nexport function* watchSpin(): any {\n  yield takeEvery(SPIN_WHEEL_REQUEST, handleGenerateSpin)\n  yield takeEvery(SPIN_WHEEL_SUCCESS, handleSpinResult)\n}\n","// @flow\nimport { all } from 'redux-saga/effects'\n\nimport { watchSpin } from './fruitMachine'\n\nfunction* rootSaga(): any {\n  yield all([\n    watchSpin(),\n    // more sagas here\n  ])\n}\n\nexport default rootSaga\n","// @flow\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\n\nimport rootReducer from '../reducers'\nimport rootSaga from '../sagas'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n)\n\nsagaMiddleware.run(rootSaga)\n\nexport default store\n","// @flow\nimport styled from 'styled-components'\n\nexport const PageLayout = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n","import { PageLayout } from './PageLayout'\nexport default PageLayout\n","// @flow\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst HeadingContainer = styled.div`\n  text-align: center;\n`\nconst Title = styled.h1`\n  color: rgb(75, 198, 155);\n`\n\nconst Subtitle = styled.h2`\n  color: rgb(68, 68, 68);\n`\n\nexport function Heading() {\n  return (\n    <HeadingContainer>\n      <Title>Fruit Machine</Title>\n      <Subtitle>Click the lever to play!</Subtitle>\n    </HeadingContainer>\n  )\n}\n","import { Heading } from './Heading'\nexport default Heading\n","// @flow\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst Facet = styled.div`\n  position: absolute;\n  height: 100px;\n  width: 100px;\n  color: rgba(0, 0, 0, 0.9);\n  border-radius: 5px;\n  border: 10px solid rgb(191, 191, 191);\n  background-color: ${p => p.color};\n  transform: rotateX(${p => p.rotateX}deg) translateZ(${p => p.radius}px);\n`\n\ntype Props = {\n  color: string,\n  radius: number,\n  rotateX: number,\n}\n\nexport function WheelFace(props: Props) {\n  const { color, radius, rotateX } = props\n  return <Facet color={color} radius={radius} rotateX={rotateX} />\n}\n","import { WheelFace } from './WheelFace'\nexport default WheelFace\n","// @flow\nimport React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nimport {\n  ANIMATION_DURATION,\n  WHEEL_ANGLE,\n  WHEEL_RADIUS,\n  WHEELFACES_PER_ROW,\n  COLORS_BY_INDEX,\n} from '../../config/constants'\nimport WheelFace from '../WheelFace'\n\nfunction getPosition(index) {\n  return index * WHEEL_ANGLE + 360 * 2\n}\n\nconst AnimatedWheel = styled.div`\n  height: 120px;\n  transform-style: preserve-3d;\n  animation-iteration-count: 1;\n  animation-timing-function: linear;\n  animation-duration: ${ANIMATION_DURATION}s;\n  animation-fill-mode: forwards;\n  animation-name: ${p => p.animation};\n  animation-delay: -${p => p.delay}ms;\n`\ntype Props = {\n  isLoading: boolean,\n  delay: number,\n  prevIndex: number,\n  nextIndex: number,\n}\nexport function Wheel(props: Props) {\n  const { isLoading, delay, prevIndex, nextIndex } = props\n\n  let toPos = nextIndex !== -1 ? getPosition(nextIndex) : 360\n  if (prevIndex === nextIndex) {\n    // make the wheel spin even if it will land at the same place twice\n    toPos += 360\n  }\n\n  const animation = keyframes`\n    from {\n      transform: rotateX(0deg)\n    }\n    to {\n      transform: rotateX(-${toPos}deg)\n    }\n  `\n\n  const wheelFaces = []\n  for (let i = 0; i < WHEELFACES_PER_ROW; i++) {\n    wheelFaces.push(\n      <WheelFace\n        key={`${i}-${delay}`}\n        rotateX={WHEEL_ANGLE * i}\n        radius={WHEEL_RADIUS}\n        color={COLORS_BY_INDEX[i].value}\n      />\n    )\n  }\n\n  return (\n    <AnimatedWheel\n      isLoading={isLoading}\n      delay={delay}\n      animation={animation}>\n      {wheelFaces}\n    </AnimatedWheel>\n  )\n}\n","import { Wheel } from './Wheel'\nexport default Wheel\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref7 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref8 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref9 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref10 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref11 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref12 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref13 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref14 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar _ref15 =\n/*#__PURE__*/\nReact.createElement(\"g\", null);\n\nvar SvgComponent = function SvgComponent(props) {\n  return React.createElement(\"svg\", _extends({\n    version: 1.1,\n    id: \"Layer_1\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      \"enableBackground\": \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\"\n  }, props), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#999999\"\n    },\n    d: \"M428.463,471.59v21.559c0,5.953-4.826,10.78-10.779,10.78h-5.956H100.272h-5.956 c-5.953,0-10.779-4.826-10.779-10.78V471.59c0-5.953,4.826-10.779,10.779-10.779h15.033l15.485-73.56 c4.201-19.953,21.803-34.235,42.191-34.235h177.949c20.388,0,37.99,14.282,42.191,34.235l15.485,73.56h15.034 C423.638,460.811,428.463,465.637,428.463,471.59z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#6D6D6D\"\n    },\n    d: \"M428.463,471.59v21.559c0,5.953-4.826,10.78-10.779,10.78h-5.956h-26.38 c5.953,0,10.779-4.826,10.779-10.78V471.59c0-5.953-4.826-10.779-10.779-10.779h-15.033H109.349l6.808-32.339h220.78 c13.693,0,23.916-12.601,21.095-26l-3.205-15.221c-4.201-19.953-21.803-34.235-42.191-34.235h32.337 c20.388,0,37.99,14.282,42.191,34.235l15.485,73.56h15.034C423.638,460.811,428.463,465.637,428.463,471.59z\"\n  }), React.createElement(\"path\", {\n    id: \"lever\",\n    style: {\n      \"fill\": \"#BFBFBF\"\n    },\n    d: \"M275.409,358.2l-41.647,11.159l-69.745-260.305l41.647-11.159L275.409,358.2z\"\n  }), React.createElement(\"path\", {\n    id: \"lever\",\n    style: {\n      \"fill\": \"#6D6D6D\"\n    },\n    d: \"M207.251,103.822L275.408,358.2l-19.527,5.232l-68.156-254.378L207.251,103.822z\"\n  }), React.createElement(\"path\", {\n    id: \"lever\",\n    style: {\n      \"fill\": \"#FFB933\"\n    },\n    d: \"M222.558,115.688l-64.277,17.224c-5.385,1.443-10.982-1.458-12.906-6.69L126.279,74.3 c-9.991-27.164,5.498-57.043,33.454-64.534l0,0c27.955-7.491,56.308,10.64,61.237,39.16l9.421,54.513 C231.34,108.933,227.944,114.245,222.558,115.688z\"\n  }), React.createElement(\"path\", {\n    id: \"lever\",\n    style: {\n      \"fill\": \"#FFD34E\"\n    },\n    d: \"M193.113,123.578l-34.831,9.333c-5.385,1.443-10.982-1.458-12.906-6.69L126.279,74.3 c-8.526-23.181,1.513-48.327,22.011-59.862c17.115,8.417,30.212,24.603,33.745,45.041L193.113,123.578z\"\n  }), React.createElement(\"path\", {\n    id: \"lever\",\n    style: {\n      \"fill\": \"#BFBFBF\"\n    },\n    d: \"M334.068,348.24c11.556,43.129-14.037,87.459-57.164,99.015s-87.455-14.038-99.011-57.167 c-11.556-43.129,14.037-87.459,57.164-99.015C278.183,279.517,322.512,305.111,334.068,348.24z\"\n  }), React.createElement(\"path\", {\n    id: \"lever\",\n    style: {\n      \"fill\": \"#999999\"\n    },\n    d: \"M292.421,359.401c5.393,20.126-6.55,40.814-26.677,46.207c-20.125,5.393-40.812-6.551-46.205-26.678 s6.55-40.814,26.677-46.207C266.341,327.329,287.028,339.273,292.421,359.401z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"#444444\"\n    },\n    d: \"M265.765,405.608c-7.983,2.14-16.051,1.542-23.221-1.203c17.85-6.805,28.011-26.15,22.96-45.004 c-3.253-12.144-12.078-21.299-22.984-25.475c1.205-0.459,2.444-0.862,3.717-1.203c20.125-5.393,40.812,6.551,46.205,26.678 C297.833,379.527,285.89,400.215,265.765,405.608z\"\n  }), _ref, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15);\n};\n\nexport default __webpack_public_path__ + \"static/media/control-lever.376a9b78.svg\";\nexport { SvgComponent as ReactComponent };","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nimport { ReactComponent as LeverSVG } from './control-lever.svg'\n\nconst leverAnimation = keyframes`\n  0% {\n    transform: rotateZ(0);\n  }\n  50% {\n    transform: rotateZ(50deg);\n  }\n  80% {\n    transform: rotateZ(-10deg);\n  }\n  100% {\n    transform: rotateZ(0);\n  }\n`\n\nconst AnimatedLever = styled.div`\n  transform: rotate(90deg);\n  position: absolute;\n  margin-left: 450px;\n  margin-top: -160px;\n  height: 200px;\n  width: 200px;\n  #lever {\n    /* the elements we want to animate are tagged with id=\"lever\" in LeverSVG */\n    cursor: grab;\n    transform-origin: 50% 72%;\n    animation-iteration-count: 1;\n    animation-timing-function: ease-out;\n    animation-duration: 1s;\n    animation-fill-mode: forwards;\n    animation-name: ${p => (p.isSpinning ? leverAnimation : 'none')};\n  }\n`\n\n\nexport function Lever(props) {\n  const { isSpinning, onClick } = props\n  return (\n    <AnimatedLever\n      onClick={isSpinning ? null : onClick}\n      isSpinning={isSpinning}>\n      <LeverSVG />\n    </AnimatedLever>\n  )\n}\n","import { Lever } from './Lever'\nexport default Lever\n","// @flow\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport type { Wheel } from '../../types/fruitMachine'\n\nimport WheelComponent from '../Wheel'\nimport Lever from '../Lever'\n\nconst FruitMachineContainer = styled.div`\n  margin-top: 200px;\n  perspective: 2000;\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -200px;\n    left: -60px;\n    right: -59px;\n    top: -200px;\n    z-index: 999;\n    border: 40px solid rgba(255, 211, 78, 0.8);\n    border-top: 200px solid rgba(255, 185, 51, 0.8);\n    border-bottom: 200px solid rgba(239, 163, 19, 0.8);\n    pointer-events: none;\n    border-radius: 12px;\n    box-shadow: inset 0 10px 10px rgba(0, 0, 0, 0.4);\n  }\n`\n\nconst WheelsContainer = styled.div`\n  transform-style: preserve-3d;\n  display: grid;\n  grid-template-columns: 120px 120px 120px;\n  grid-template-rows: auto;\n  grid-template-areas: 'wheel wheel wheel';\n`\n\nconst Layout = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 550px;\n  width: 600px;\n`\n\ntype Props = {\n  wheels: Array<Wheel>,\n  onSpin: () => {},\n  isSpinning: boolean,\n}\nexport function FruitMachine(props: Props) {\n  const { wheels, onSpin, isSpinning } = props\n\n  return (\n    <Layout>\n      <FruitMachineContainer>\n        <WheelsContainer>\n          <WheelComponent\n            prevIndex={wheels[0].prev}\n            nextIndex={wheels[0].next}\n            delay={600}\n          />\n          <WheelComponent\n            prevIndex={wheels[1].prev}\n            nextIndex={wheels[1].next}\n            delay={300}\n          />\n          <WheelComponent\n            prevIndex={wheels[2].prev}\n            nextIndex={wheels[2].next}\n            delay={0}\n          />\n        </WheelsContainer>\n        <Lever onClick={onSpin} isSpinning={isSpinning} />\n      </FruitMachineContainer>\n    </Layout>\n  )\n}\n","import { FruitMachine } from './FruitMachine'\nexport default FruitMachine\n","// @flow\nimport React from 'react'\nimport styled from 'styled-components'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\n\nimport { COLORS } from '../../config/constants'\nimport type { Result } from '../../types/fruitMachine'\n\nconst ResultsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StyledText = styled.p`\n  font-size: 24px;\n  font-weight: 700;\n  padding: 10px;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n  width: 500px;\n  text-align: center;\n  background-color: white;\n  box-shadow: 1px 1px 2px;\n  color: ${p => {\n    switch (p.count) {\n      case 3:\n        return COLORS[1].value\n      case 2:\n        return 'rgb(239, 163, 19)'\n      default:\n        return COLORS[0].value\n    }\n  }};\n  &.animate-enter {\n    opacity: 0;\n  }\n  &.animate-enter-active {\n    opacity: 1;\n    transition: opacity 500ms ease-in;\n  }\n`\n\nexport function getResultText(count: number, color: string) {\n  switch (count) {\n    case 3:\n      return `Jackpot! You won with ${count} ${color} squares`\n    case 2:\n      return `Almost! You only matched ${count} ${color} squares`\n    default:\n      return `Unlucky! You didn't get any matches`\n  }\n}\n\ntype Props = {\n  results: Array<Result>,\n}\n\nexport function SpinResult(props: Props) {\n  const { results } = props\n  const notifications = results.map((result, i) => (\n    <CSSTransition\n      key={result.key}\n      exit={false}\n      classNames=\"animate\"\n      timeout={1000}>\n      <StyledText count={result.count}>\n        {getResultText(result.count, result.color)}\n      </StyledText>\n    </CSSTransition>\n  ))\n  return (\n    <ResultsContainer>\n      <TransitionGroup component={null}>{notifications}</TransitionGroup>\n    </ResultsContainer>\n  )\n}\n","import { SpinResult } from './SpinResult'\nexport default SpinResult\n","// @flow\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport Confetti from 'react-dom-confetti'\n\nimport PageLayout from './components/PageLayout'\nimport Heading from './components/Heading'\nimport FruitMachine from './components/FruitMachine'\nimport SpinResult from './components/SpinResult'\n\nimport { spinWheelRequest } from './actions'\nimport type { Wheel, Result, State } from './types/fruitMachine'\n\nconst confettiConfig = {\n  angle: 90,\n  spread: 45,\n  startVelocity: 45,\n  elementCount: 50,\n  dragFriction: 0.1,\n  duration: 3000,\n  delay: 0,\n  width: '10px',\n  height: '10px',\n  colors: ['#a864fd', '#29cdff', '#78ff44', '#ff718d', '#fdff6a'],\n}\n\ntype Props = {\n  isSpinning: boolean,\n  wheels: Array<Wheel>,\n  isWin: boolean,\n  results: Array<Result>,\n  handleSpin: () => {},\n}\n\nexport function App(props: Props) {\n  const { isSpinning, wheels, isWin, results, handleSpin } = props\n  return (\n    <PageLayout>\n      <Heading />\n      <FruitMachine\n        isSpinning={isSpinning}\n        wheels={wheels}\n        isWin={isWin}\n        onSpin={handleSpin}\n      />\n      <Confetti config={confettiConfig} active={isWin} />\n      <SpinResult results={results} />\n    </PageLayout>\n  )\n}\n\nexport function mapStateToProps(state: { fruitMachine: State }) {\n  return {\n    isSpinning: state.fruitMachine.isSpinning,\n    wheels: state.fruitMachine.wheels,\n    isWin: state.fruitMachine.isWin,\n    results: state.fruitMachine.results,\n  }\n}\n\nconst actionCreators = { handleSpin: spinWheelRequest }\n\nexport default connect(\n  mapStateToProps,\n  actionCreators\n)(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport store from './config/store'\n\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}